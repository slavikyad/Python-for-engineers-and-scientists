# -*- coding: utf-8 -*-
"""
# multiprocessing - міжпроцесова взаємодія
Для обміну об'єктами між процесами можна використовувати черги (`Queue`), канали (`Pipe`), спільну пам'ять (`Value`, `Array`). Клас `Manager` створює об'єкт, що контролює серверний процес, який зберігає об'єкти Python і дозволяє іншим процесам використовувати їх. Використання об'єктів `Manager` більш гнучке, ніж об'єктів спільної пам'яті, так як вони можуть підтримувати об'єкти довільних типів. Але вони більш повільні. У прикладі за допомогою `Manager` створюється список, у який базовий і дочірній процес паралельно додають елементи.
"""
from multiprocessing import Process, Manager
def f(L): # функція, що виконується в окремому процесі
    L.append(4)
if __name__ == '__main__':
    manager = Manager() # менеджер
    L = manager.list([1,2]) # спільний для процесів список
    p = Process(target=f, args=(L, )) # новий процес
    p.start() # стартувати процес (робота з L розпаралелюється)
    L.append(3)
    p.join() # приєднати процес
    print L
