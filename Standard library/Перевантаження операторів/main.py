# -*- coding: utf-8 -*-
"""
# Перевантаження операторів
Перевантаження (перевизначення) операторів - це можливість зміни функціонування стандартних операторів (`+` , `-` , `==`, `()` та ін.) для об'єктів користувача. Для цього в класах цих об'єктів створюються реалізації відповідних методів (`__add__`, `__sub__`, `__eq__`, `__call__` та ін.)
"""
class A(object): # клас A
    x=0 # атрибут-дане x
    def __init__(self,x=0): # конструктор
        self.x=x
    def __add__(self, obj): # метод перевантажує оператор +
        return A(self.x+obj.x) # повертає об'єкт класу A
    def __eq__(self, obj): # метод перевантажує оператор ==
        return self.x==obj.x # повертає значення логічного виразу
    def __call__(self,x=0): # метод перевантажує оператор ()
        return A(x) # повертає об'єкт класу A
    def __str__(self): # метод повертає рядкове відображення об'єкта
        return "%s"%self.x
a=A(2); b=A(2) # створити об'єкти a і b класу A
c=a+b # виклик перевантаженого оператора +
print type(c) # тип об'єкта c
print a==b # виклик перевантаженого оператора ==
print a(3)+b(2) # виклик перевантажених операторів () і +
print c # виклик методу __str__
