# -*- coding: utf-8 -*-
"""
# kanren - логічне програмування в Python
kanren 0.2.3 (https://github.com/logpy/logpy) - це реалізація вбудованої предметно-орієнтованої мови логічного програмування miniKanren (http://minikanren.org). miniKanren спроектована для легкої модифікації і розширення для різних видів логічного програмування. kanren використовує бібліотеку `unification` для уніфікації - розширеної форми зіставлення з взірцем. Типи, які можуть бути уніфіковані, можуть застосовуватись також для логічного програмування. Наступний код знаходить значення `x`:

    >>> from unification import *
    >>> x = var('x')
    >>> unify((1,x,3), (1,2,3))
    {~x: 2}
Де `(1,x,3)`, `(1,2,3)` - два терми (дерево, листки якого є константами або змінними), `x` - логічна змінна, `{~x: 2}` - підстановка, `unify` - функція, яка повертає підстановку за двома термами.

Ціль - це функція з підстановки в потік підстановок:

    >>> goal=eq((1,x,3), (1,2,3))
    >>> for s in goal({}):
    ...     print s
    {~x: 2}
Ціль створюється за допомогою конструктора цілі (`eq`, `membero`, `conde` та інших). Логічна програма виконується функцією `run(n, x, *goals)`, де `n` - кількість розв'язків, `x` - змінна, `*goals` - послідовність цілей. 
"""
from kanren import *
ne = goals.not_equalo # конструктор цілі "не рівні"
#ne = goalify(lambda x,y: x!=y) # або створити з функції
#import operator; ne = goalify(operator.ne) # або створити з оператора

parent = Relation() # відношення між термами
fact(parent, "Іван", "Петро") # факт - Іван батько Петра
fact(parent, "Іван", "Василь")
fact(parent, "Петро",  "Марія")
x,y = var(),var() # логічні змінні
def sibling(x, y): # відношення "рідні" (брат або сестра)
    z = var()
    # (z батько x) і (z батько y) і (x,y не рівні)
    # conde - конструктор цілі для логічного І та АБО
    return conde( (parent(z, x), parent(z, y), (ne,(x,y),True)) )

for x,y in run(0, (x, y), sibling(x, y)):
    print x,y # вивести усі пари рідних
x,y = var(),var() 
for x in run(0, x, conde( (parent(x, "Петро"),), (parent("Петро", x),) )):
    print x # вивести усіх батьків або дітей Петра
"""
    Петро Василь
    Василь Петро
    Іван
    Марія
"""
