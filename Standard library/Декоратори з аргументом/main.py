# -*- coding: utf-8 -*-
"""
# Декоратори з аргументом
Декоратор може мати довільні аргументи. В прикладі декоратор має аргумент `arg`, значення якого виводиться перед викликом функції, що обгортається. 
"""
def decorator(arg): # функція отримує аргумент і повертає внутрішню функцію f
    def f(fn): # внутрішня функція-обгортка
        print arg, # додані нові можливості
        return fn # повертає функцію fn
    return f
def function(x): # функція, яка обгортається
    return x*x
temp=decorator('y=') # отримати аргумент і повернути функцію f 
function=temp(function) # обгорнути функцію
print function(2) # виклик обгорнутої функції

# те саме, але з застосуванням декоратора @decorator з аргументом
@decorator('y=')
def function(x): # функція, яка обгортається
    return x*x
print function(2) # виклик обгорнутої функції 
