# -*- coding: utf-8 -*-
"""
# Декоратори
Декоратор - це функція-обгортка, яка отримує і повертає іншу функцію, метод чи клас. Використовуються для розширення їх можливостей.
"""
def decorator(fn): # функція-обгортка, яка отримує і повертає fn
    print 'y=', # додані нові можливості
    return fn # повертає функцію fn
def function(x): # функція, яка обгортається
    return x*x
function=decorator(function) # обгорнути функцію  
print function(2) # виклик обгорнутої функції

# те саме, але з застосуванням декоратора @decorator  
@decorator
def function(x): # функція, яка обгортається
    return x*x
print function(2) # виклик обгорнутої функції
